package com.systop.fsmis.model;

// Generated 2009-12-16 9:41:03 by Hibernate Tools 3.2.4.GA

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Depts generated by hbm2java
 */
@Entity
@Table(name = "DEPTS")
public class Depts implements java.io.Serializable {

	private long id;
	private Depts depts;
	private String name;
	private String deptSort;
	private String descn;
	private Long ordernum;
	private String isLawDept;
	private String isTownship;
	private String serialNo;
	private Set<Users> userses = new HashSet<Users>(0);
	private Set<GenericCase> genericCases = new HashSet<GenericCase>(0);
	private Set<ReceiveRecord> receiveRecords = new HashSet<ReceiveRecord>(0);
	private Set<TaskDetail> taskDetails = new HashSet<TaskDetail>(0);
	private Set<Enterprise> enterprises = new HashSet<Enterprise>(0);
	private Set<Depts> deptses = new HashSet<Depts>(0);
	private Set<Supervisor> supervisors = new HashSet<Supervisor>(0);

	public Depts() {
	}

	public Depts(long id) {
		this.id = id;
	}

	public Depts(long id, Depts depts, String name, String deptSort,
			String descn, Long ordernum, String isLawDept, String isTownship,
			String serialNo, Set<Users> userses, Set<GenericCase> genericCases,
			Set<ReceiveRecord> receiveRecords, Set<TaskDetail> taskDetails,
			Set<Enterprise> enterprises, Set<Depts> deptses,
			Set<Supervisor> supervisors) {
		this.id = id;
		this.depts = depts;
		this.name = name;
		this.deptSort = deptSort;
		this.descn = descn;
		this.ordernum = ordernum;
		this.isLawDept = isLawDept;
		this.isTownship = isTownship;
		this.serialNo = serialNo;
		this.userses = userses;
		this.genericCases = genericCases;
		this.receiveRecords = receiveRecords;
		this.taskDetails = taskDetails;
		this.enterprises = enterprises;
		this.deptses = deptses;
		this.supervisors = supervisors;
	}

	@Id
	@Column(name = "ID", unique = true, nullable = false, precision = 10, scale = 0)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PARENT_ID")
	public Depts getDepts() {
		return this.depts;
	}

	public void setDepts(Depts depts) {
		this.depts = depts;
	}

	@Column(name = "NAME", length = 510)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "DEPT_SORT", length = 510)
	public String getDeptSort() {
		return this.deptSort;
	}

	public void setDeptSort(String deptSort) {
		this.deptSort = deptSort;
	}

	@Column(name = "DESCN", length = 510)
	public String getDescn() {
		return this.descn;
	}

	public void setDescn(String descn) {
		this.descn = descn;
	}

	@Column(name = "ORDERNUM", precision = 10, scale = 0)
	public Long getOrdernum() {
		return this.ordernum;
	}

	public void setOrdernum(Long ordernum) {
		this.ordernum = ordernum;
	}

	@Column(name = "IS_LAW_DEPT", length = 510)
	public String getIsLawDept() {
		return this.isLawDept;
	}

	public void setIsLawDept(String isLawDept) {
		this.isLawDept = isLawDept;
	}

	@Column(name = "IS_TOWNSHIP", length = 510)
	public String getIsTownship() {
		return this.isTownship;
	}

	public void setIsTownship(String isTownship) {
		this.isTownship = isTownship;
	}

	@Column(name = "SERIAL_NO", length = 510)
	public String getSerialNo() {
		return this.serialNo;
	}

	public void setSerialNo(String serialNo) {
		this.serialNo = serialNo;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "depts")
	public Set<Users> getUserses() {
		return this.userses;
	}

	public void setUserses(Set<Users> userses) {
		this.userses = userses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "depts")
	public Set<GenericCase> getGenericCases() {
		return this.genericCases;
	}

	public void setGenericCases(Set<GenericCase> genericCases) {
		this.genericCases = genericCases;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "depts")
	public Set<ReceiveRecord> getReceiveRecords() {
		return this.receiveRecords;
	}

	public void setReceiveRecords(Set<ReceiveRecord> receiveRecords) {
		this.receiveRecords = receiveRecords;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "depts")
	public Set<TaskDetail> getTaskDetails() {
		return this.taskDetails;
	}

	public void setTaskDetails(Set<TaskDetail> taskDetails) {
		this.taskDetails = taskDetails;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "depts")
	public Set<Enterprise> getEnterprises() {
		return this.enterprises;
	}

	public void setEnterprises(Set<Enterprise> enterprises) {
		this.enterprises = enterprises;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "depts")
	public Set<Depts> getDeptses() {
		return this.deptses;
	}

	public void setDeptses(Set<Depts> deptses) {
		this.deptses = deptses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "depts")
	public Set<Supervisor> getSupervisors() {
		return this.supervisors;
	}

	public void setSupervisors(Set<Supervisor> supervisors) {
		this.supervisors = supervisors;
	}

}
