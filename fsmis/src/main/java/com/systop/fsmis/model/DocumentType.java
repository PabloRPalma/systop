package com.systop.fsmis.model;

// Generated 2009-12-16 9:15:02 by Hibernate Tools 3.2.4.GA

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * DocumentType generated by hbm2java
 */
@Entity
@Table(name = "DOCUMENT_TYPE")
public class DocumentType implements java.io.Serializable {

	private long id;
	private DocumentType documentType;
	private String name;
	private String descn;
	private Set<DocumentType> documentTypes = new HashSet<DocumentType>(0);
	private Set<Document> documents = new HashSet<Document>(0);

	public DocumentType() {
	}

	public DocumentType(long id) {
		this.id = id;
	}

	public DocumentType(long id, DocumentType documentType, String name,
			String descn, Set<DocumentType> documentTypes,
			Set<Document> documents) {
		this.id = id;
		this.documentType = documentType;
		this.name = name;
		this.descn = descn;
		this.documentTypes = documentTypes;
		this.documents = documents;
	}

	@Id
	@Column(name = "ID", unique = true, nullable = false, precision = 10, scale = 0)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PARENT")
	public DocumentType getDocumentType() {
		return this.documentType;
	}

	public void setDocumentType(DocumentType documentType) {
		this.documentType = documentType;
	}

	@Column(name = "NAME", length = 100)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "DESCN", length = 510)
	public String getDescn() {
		return this.descn;
	}

	public void setDescn(String descn) {
		this.descn = descn;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "documentType")
	public Set<DocumentType> getDocumentTypes() {
		return this.documentTypes;
	}

	public void setDocumentTypes(Set<DocumentType> documentTypes) {
		this.documentTypes = documentTypes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "documentType")
	public Set<Document> getDocuments() {
		return this.documents;
	}

	public void setDocuments(Set<Document> documents) {
		this.documents = documents;
	}

}
